{"ast":null,"code":"var _jsxFileName = \"/Users/royschut 1/videodock_frontend_test/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid, Modal, Typography, Tooltip, Zoom, Paper } from \"@material-ui/core\";\nimport \"./App.css\";\nimport DataSource from \"./DataSource\";\n\nfunction App() {\n  const dataSource = new DataSource();\n  const [videos, setVideos] = useState([]);\n  const [curVid, setCurVid] = useState();\n  useEffect(() => {\n    dataSource.loadVideos(playlist => {\n      console.log(playlist);\n      setVideos(playlist);\n    });\n  }, []);\n\n  const runVid = i => {\n    setCurVid(videos[i].sources[6].file);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    maxWidth: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Video playlist\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, videos.map((v, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: v.title,\n    placement: \"top\",\n    arrow: true,\n    TransitionComponent: Zoom,\n    enterDelay: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      width: 400,\n      height: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: v.image,\n    className: \"poster\",\n    onClick: () => runVid(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(Modal, {\n    open: curVid,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    onOpen: () => console.log(\"opemn\"),\n    onClose: () => console.log(\"close\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vidcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"closeBtn\",\n    onClick: () => setCurVid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"x\"), /*#__PURE__*/React.createElement(\"video\", {\n    src: curVid,\n    className: \"vid\",\n    controls: true,\n    autoplay: true,\n    onLoadedData: e => e.target.play(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/royschut 1/videodock_frontend_test/src/App.js"],"names":["React","useState","useEffect","Container","Grid","Modal","Typography","Tooltip","Zoom","Paper","DataSource","App","dataSource","videos","setVideos","curVid","setCurVid","loadVideos","playlist","console","log","runVid","i","sources","file","map","v","title","width","height","image","e","target","play"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Grid,\n  Modal,\n  Typography,\n  Tooltip,\n  Zoom,\n  Paper,\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport DataSource from \"./DataSource\";\n\nfunction App() {\n  const dataSource: DataSource = new DataSource();\n  const [videos, setVideos] = useState([]);\n  const [curVid, setCurVid] = useState();\n\n  useEffect(() => {\n    dataSource.loadVideos((playlist) => {\n      console.log(playlist);\n      setVideos(playlist);\n    });\n  }, []);\n\n  const runVid = (i) => {\n    setCurVid(videos[i].sources[6].file);\n  };\n\n  return (\n    <Container className=\"App\" maxWidth=\"xl\">\n      <Typography variant=\"h4\">Video playlist</Typography>\n      <Grid container spacing={3} direction=\"row\">\n        {videos.map((v, i) => (\n          <Grid item>\n            <Tooltip\n              title={v.title}\n              placement=\"top\"\n              arrow\n              TransitionComponent={Zoom}\n              enterDelay={300}\n            >\n              <Paper style={{ width: 400, height: 400 }}>\n                <img\n                  src={v.image}\n                  className=\"poster\"\n                  onClick={() => runVid(i)}\n                />\n              </Paper>\n            </Tooltip>\n          </Grid>\n        ))}\n      </Grid>\n      <Modal\n        open={curVid}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        onOpen={() => console.log(\"opemn\")}\n        onClose={() => console.log(\"close\")}\n      >\n        <div className=\"popover\">\n          <div className=\"vidcontainer\">\n            <button className=\"closeBtn\" onClick={() => setCurVid()}>\n              x\n            </button>\n            <video\n              src={curVid}\n              className=\"vid\"\n              controls\n              autoplay\n              onLoadedData={(e) => e.target.play()}\n            />\n          </div>\n        </div>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}