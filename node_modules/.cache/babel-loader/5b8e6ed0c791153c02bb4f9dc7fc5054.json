{"ast":null,"code":"import axios from \"axios\";\nconst source = \"https://cdn.jwplayer.com/v2/playlists/iG6xB42W\";\n/*    PlaylistLoader\n *     Loads the playlist from external API\n *     On result.data.playlist: return pl to callBack\n *\n *     (url hardcoded above for this case)\n */\n\nexport default function PlaylistLoader(callBack) {\n  axios({\n    method: \"get\",\n    url: source\n  }).then(result => {\n    if (result.data) {\n      if (result.data.playlist) {\n        callBack(result.data.playlist);\n      } else {\n        console.log(\"No playlist: \" + result.data);\n      }\n    } else {\n      console.log(\"No data: \" + result);\n    }\n  }, error => {\n    console.log(\"error: \" + error.message);\n  });\n}","map":{"version":3,"sources":["/Users/royschut 1/videodock_frontend_test/src/util/PlaylistLoader.js"],"names":["axios","source","PlaylistLoader","callBack","method","url","then","result","data","playlist","console","log","error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,gDAAf;AAEA;;;;;;;AAOA,eAAe,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAC/CH,EAAAA,KAAK,CAAC;AACJI,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,EAAEJ;AAFD,GAAD,CAAL,CAGGK,IAHH,CAIGC,MAAD,IAAY;AACV,QAAIA,MAAM,CAACC,IAAX,EAAiB;AACf,UAAID,MAAM,CAACC,IAAP,CAAYC,QAAhB,EAA0B;AACxBN,QAAAA,QAAQ,CAACI,MAAM,CAACC,IAAP,CAAYC,QAAb,CAAR;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBJ,MAAM,CAACC,IAArC;AACD;AACF,KAND,MAMO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcJ,MAA1B;AACD;AACF,GAdH,EAeGK,KAAD,IAAW;AACTF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,KAAK,CAACC,OAA9B;AACD,GAjBH;AAmBD","sourcesContent":["import axios from \"axios\";\n\nconst source = \"https://cdn.jwplayer.com/v2/playlists/iG6xB42W\";\n\n/*    PlaylistLoader\n *     Loads the playlist from external API\n *     On result.data.playlist: return pl to callBack\n *\n *     (url hardcoded above for this case)\n */\n\nexport default function PlaylistLoader(callBack) {\n  axios({\n    method: \"get\",\n    url: source,\n  }).then(\n    (result) => {\n      if (result.data) {\n        if (result.data.playlist) {\n          callBack(result.data.playlist);\n        } else {\n          console.log(\"No playlist: \" + result.data);\n        }\n      } else {\n        console.log(\"No data: \" + result);\n      }\n    },\n    (error) => {\n      console.log(\"error: \" + error.message);\n    }\n  );\n}\n"]},"metadata":{},"sourceType":"module"}