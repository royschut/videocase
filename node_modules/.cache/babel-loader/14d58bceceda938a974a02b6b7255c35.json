{"ast":null,"code":"var _jsxFileName = \"/Users/royschut 1/videodock_frontend_test/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid, Modal, Typography, Tooltip, Zoom, Paper, Button } from \"@material-ui/core\";\nimport \"./App.css\";\nimport PlaylistLoader from \"./PlaylistLoader\";\n\nfunction App() {\n  const [videos, setVideos] = useState();\n  const [curVid, setCurVid] = useState();\n  const [curHover, setCurHover] = useState(2); //For rollover UX\n  //When mounted, load playlists -> then add to state: setVideos\n\n  useEffect(() => {\n    PlaylistLoader(playlist => {\n      //console.log(playlist);\n      setVideos(playlist);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    maxWidth: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Video playlist\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, videos && videos.map((v, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    key: i,\n    title: v.title,\n    placement: \"top\",\n    arrow: true,\n    TransitionComponent: Zoom,\n    enterDelay: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: 2,\n      paddingBottom: 0\n    },\n    onMouseEnter: () => setCurHover(i),\n    onMouseLeave: () => setCurHover(),\n    elevation: curHover === i ? 5 : 1,\n    style: {\n      opacity: curHover === i ? 1 : 0.95\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: v.image,\n    className: \"poster\",\n    onClick: () => setCurVid(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(Modal, {\n    open: curVid,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    onOpen: () => console.log(\"opemn\"),\n    onClose: () => console.log(\"close\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vidcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"closeBtn\",\n    onClick: () => setCurVid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"x\"), videos && curVid && /*#__PURE__*/React.createElement(\"video\", {\n    src: videos[curVid].sources[6].file,\n    className: \"vid\",\n    controls: true,\n    autoplay: true,\n    onLoadedData: e => e.target.play(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/royschut 1/videodock_frontend_test/src/App.js"],"names":["React","useState","useEffect","Container","Grid","Modal","Typography","Tooltip","Zoom","Paper","Button","PlaylistLoader","App","videos","setVideos","curVid","setCurVid","curHover","setCurHover","playlist","map","v","i","title","padding","paddingBottom","opacity","image","console","log","sources","file","e","target","play"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Grid,\n  Modal,\n  Typography,\n  Tooltip,\n  Zoom,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\n\nimport \"./App.css\";\nimport PlaylistLoader from \"./PlaylistLoader\";\n\nfunction App() {\n  const [videos, setVideos] = useState();\n  const [curVid, setCurVid] = useState();\n\n  const [curHover, setCurHover] = useState(2); //For rollover UX\n\n  //When mounted, load playlists -> then add to state: setVideos\n  useEffect(() => {\n    PlaylistLoader((playlist) => {\n      //console.log(playlist);\n      setVideos(playlist);\n    });\n  }, []);\n\n  return (\n    <Container className=\"App\" maxWidth=\"xl\">\n      <Typography variant=\"h4\">Video playlist</Typography>\n      <Grid container spacing={3} direction=\"row\">\n        {videos &&\n          videos.map((v, i) => (\n            <Grid item>\n              <Tooltip\n                key={i}\n                title={v.title}\n                placement=\"top\"\n                arrow\n                TransitionComponent={Zoom}\n                enterDelay={300}\n              >\n                <Paper\n                  style={{ padding: 2, paddingBottom: 0 }}\n                  onMouseEnter={() => setCurHover(i)}\n                  onMouseLeave={() => setCurHover()}\n                  elevation={curHover === i ? 5 : 1}\n                  style={{ opacity: curHover === i ? 1 : 0.95 }}\n                >\n                  <img\n                    src={v.image}\n                    className=\"poster\"\n                    onClick={() => setCurVid(i)}\n                  />\n                </Paper>\n              </Tooltip>\n            </Grid>\n          ))}\n      </Grid>\n      <Modal\n        open={curVid}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        onOpen={() => console.log(\"opemn\")}\n        onClose={() => console.log(\"close\")}\n      >\n        <div className=\"popover\">\n          <div className=\"vidcontainer\">\n            <Button className=\"closeBtn\" onClick={() => setCurVid()}>\n              x\n            </Button>\n            {videos && curVid && (\n              <video\n                src={videos[curVid].sources[6].file}\n                className=\"vid\"\n                controls\n                autoplay\n                onLoadedData={(e) => e.target.play()}\n              />\n            )}\n          </div>\n        </div>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}